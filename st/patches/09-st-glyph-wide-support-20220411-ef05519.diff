From d5e54070e24b5b66338695991abac32bee6d9817 Mon Sep 17 00:00:00 2001
From: wael <40663@protonmail.com>
Date: Mon, 11 Apr 2022 16:45:49 +0300
Subject: [PATCH] add glyph wide support patch

---
 st.h |   6 +++
 x.c  | 145 ++++++++++++++++++++++++++++++-----------------------------
 2 files changed, 80 insertions(+), 71 deletions(-)

diff --git a/st.h b/st.h
index 8220966..98f3d11 100644
--- a/st.h
+++ b/st.h
@@ -37,6 +37,12 @@ enum glyph_attribute {
 	ATTR_BOLD_FAINT = ATTR_BOLD | ATTR_FAINT,
 };
 
+enum drawing_mode {
+    DRAW_NONE = 0,
+    DRAW_BG = 1 << 0,
+    DRAW_FG = 1 << 1,
+};
+
 enum selection_mode {
 	SEL_IDLE = 0,
 	SEL_EMPTY = 1,
diff --git a/x.c b/x.c
index 3c68337..ad6bb82 100644
--- a/x.c
+++ b/x.c
@@ -169,7 +169,7 @@ typedef struct
 
 static inline ushort sixd_to_16bit(int);
 static int xmakeglyphfontspecs(XftGlyphFontSpec *, const Glyph *, int, int, int);
-static void xdrawglyphfontspecs(const XftGlyphFontSpec *, Glyph, int, int, int);
+static void xdrawglyphfontspecs(const XftGlyphFontSpec *, Glyph, int, int, int, int);
 static void xdrawglyph(Glyph, int, int);
 static void xclear(int, int, int, int);
 static int xgeommasktogravity(int);
@@ -1472,7 +1472,7 @@ int xmakeglyphfontspecs(XftGlyphFontSpec *specs, const Glyph *glyphs, int len, i
 	return numspecs;
 }
 
-void xdrawglyphfontspecs(const XftGlyphFontSpec *specs, Glyph base, int len, int x, int y)
+void xdrawglyphfontspecs(const XftGlyphFontSpec *specs, Glyph base, int len, int x, int y, int dmode)
 {
 	int charlen = len * ((base.mode & ATTR_WIDE) ? 2 : 1);
 	int winx = win.hborderpx + x * win.cw, winy = win.vborderpx + y * win.ch,
@@ -1581,58 +1581,53 @@ void xdrawglyphfontspecs(const XftGlyphFontSpec *specs, Glyph base, int len, int
 	if (base.mode & ATTR_INVISIBLE)
 		fg = bg;
 
-	/* Intelligent cleaning up of the borders. */
-	if (x == 0)
+	if (dmode & DRAW_BG)
 	{
-		xclear(0, (y == 0) ? 0 : winy, win.hborderpx,
-			   winy + win.ch +
-				   ((winy + win.ch >= win.vborderpx + win.th) ? win.h : 0));
-	}
-	if (winx + width >= win.hborderpx + win.tw)
-	{
-		xclear(winx + width, (y == 0) ? 0 : winy, win.w,
-			   ((winy + win.ch >= win.vborderpx + win.th) ? win.h : (winy + win.ch)));
+		/* Intelligent cleaning up of the borders. */
+		if (x == 0)
+		{
+			xclear(0, (y == 0) ? 0 : winy, win.hborderpx,
+				   winy + win.ch +
+					   ((winy + win.ch >= win.vborderpx + win.th) ? win.h : 0));
+		}
+		if (winx + width >= win.hborderpx + win.tw)
+		{
+			xclear(winx + width, (y == 0) ? 0 : winy, win.w,
+				   ((winy + win.ch >= win.vborderpx + win.th) ? win.h : (winy + win.ch)));
+		}
+		if (y == 0)
+			xclear(winx, 0, winx + width, win.vborderpx);
+		if (winy + win.ch >= win.vborderpx + win.th)
+			xclear(winx, winy + win.ch, winx + width, win.h);
+		/* Fill the background */
+		XftDrawRect(xw.draw, bg, winx, winy, width, win.ch);
 	}
-	if (y == 0)
-		xclear(winx, 0, winx + width, win.vborderpx);
-	if (winy + win.ch >= win.vborderpx + win.th)
-		xclear(winx, winy + win.ch, winx + width, win.h);
-
-	/* Clean up the region we want to draw to. */
-	XftDrawRect(xw.draw, bg, winx, winy, width, win.ch);
 
-	/* Set the clip region because Xft is sometimes dirty. */
-	r.x = 0;
-	r.y = 0;
-	r.height = win.ch;
-	r.width = width;
-	XftDrawSetClipRectangles(xw.draw, winx, winy, &r, 1);
-
-	if (base.mode & ATTR_BOXDRAW)
+	if (dmode & DRAW_FG)
 	{
-		drawboxes(winx, winy, width / len, win.ch, fg, bg, specs, len);
-	}
-	else
-	{
-		/* Render the glyphs. */
-		XftDrawGlyphFontSpec(xw.draw, fg, specs, len);
-	}
+		if (base.mode & ATTR_BOXDRAW)
+		{
+			drawboxes(winx, winy, width / len, win.ch, fg, bg, specs, len);
+		}
+		else
+		{
+			/* Render the glyphs. */
+			XftDrawGlyphFontSpec(xw.draw, fg, specs, len);
+		}
 
-	/* Render underline and strikethrough. */
-	if (base.mode & ATTR_UNDERLINE)
-	{
-		XftDrawRect(xw.draw, fg, winx, winy + dc.font.ascent * chscale + 1,
-					width, 1);
-	}
+		/* Render underline and strikethrough. */
+		if (base.mode & ATTR_UNDERLINE)
+		{
+			XftDrawRect(xw.draw, fg, winx, winy + dc.font.ascent + 1,
+						width, 1);
+		}
 
-	if (base.mode & ATTR_STRUCK)
-	{
-		XftDrawRect(xw.draw, fg, winx, winy + 2 * dc.font.ascent * chscale / 3,
-					width, 1);
+		if (base.mode & ATTR_STRUCK)
+		{
+			XftDrawRect(xw.draw, fg, winx, winy + 2 * dc.font.ascent / 3,
+						width, 1);
+		}
 	}
-
-	/* Reset clip to none. */
-	XftDrawSetClip(xw.draw, 0);
 }
 
 void xdrawglyph(Glyph g, int x, int y)
@@ -1641,7 +1636,7 @@ void xdrawglyph(Glyph g, int x, int y)
 	XftGlyphFontSpec spec;
 
 	numspecs = xmakeglyphfontspecs(&spec, &g, 1, x, y);
-	xdrawglyphfontspecs(&spec, g, numspecs, x, y);
+	xdrawglyphfontspecs(&spec, g, numspecs, x, y, DRAW_BG | DRAW_FG);
 }
 
 void xdrawcursor(int cx, int cy, Glyph g, int ox, int oy, Glyph og)
@@ -1789,35 +1784,43 @@ int xstartdraw(void)
 
 void xdrawline(Line line, int x1, int y1, int x2)
 {
-	int i, x, ox, numspecs;
+	int i, x, ox, numspecs, numspecs_cached;
 	Glyph base, new;
-	XftGlyphFontSpec *specs = xw.specbuf;
+	XftGlyphFontSpec *specs;
+
+	numspecs_cached = xmakeglyphfontspecs(xw.specbuf, &line[x1], x2 - x1, x1, y1);
 
-	numspecs = xmakeglyphfontspecs(specs, &line[x1], x2 - x1, x1, y1);
-	i = ox = 0;
-	for (x = x1; x < x2 && i < numspecs; x++)
+	/* Draw line in 2 passes: background and foreground. This way wide glyphs
+	   won't get truncated (#223) */
+	for (int dmode = DRAW_BG; dmode <= DRAW_FG; dmode <<= 1)
 	{
-		new = line[x];
-		if (new.mode == ATTR_WDUMMY)
-			continue;
-		if (selected(x, y1))
-			new.mode ^= ATTR_REVERSE;
-		if (i > 0 && ATTRCMP(base, new))
-		{
-			xdrawglyphfontspecs(specs, base, i, ox, y1);
-			specs += i;
-			numspecs -= i;
-			i = 0;
-		}
-		if (i == 0)
+		specs = xw.specbuf;
+		numspecs = numspecs_cached;
+		i = ox = 0;
+		for (x = x1; x < x2 && i < numspecs; x++)
 		{
-			ox = x;
-			base = new;
+			new = line[x];
+			if (new.mode == ATTR_WDUMMY)
+				continue;
+			if (selected(x, y1))
+				new.mode ^= ATTR_REVERSE;
+			if (i > 0 && ATTRCMP(base, new))
+			{
+				xdrawglyphfontspecs(specs, base, i, ox, y1, dmode);
+				specs += i;
+				numspecs -= i;
+				i = 0;
+			}
+			if (i == 0)
+			{
+				ox = x;
+				base = new;
+			}
+			i++;
 		}
-		i++;
+		if (i > 0)
+			xdrawglyphfontspecs(specs, base, i, ox, y1, dmode);
 	}
-	if (i > 0)
-		xdrawglyphfontspecs(specs, base, i, ox, y1);
 }
 
 void xfinishdraw(void)
-- 
2.44.1

